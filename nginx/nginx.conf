

worker_processes auto;
worker_cpu_affinity auto;
pcre_jit on;

events {
  worker_connections 2048;
}


http {

  include mime.types;
  default_type application/octet-stream;
  sendfile on;
  tcp_nopush on;
  aio threads;
  server_tokens off; # Security: Disables nginx version in error messages and in the Server response header field.
  charset utf-8; # Force usage of UTF-8
  error_log /etc/nginx/error.log warn;
  access_log /var/log/nginx/access.log combined;


  ssl_ciphers "EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH";
  ssl_protocols TLSv1.1 TLSv1.2;
  ssl_prefer_server_ciphers on;
  ssl_session_cache shared:SSL:10m;
  add_header Strict-Transport-Security "max-age=63072000; includeSubdomains; preload";
  add_header X-Frame-Options DENY;
  add_header X-Content-Type-Options nosniff;
  ssl_session_tickets off;
  ssl_stapling on;
  ssl_stapling_verify on;
  resolver 8.8.8.8 8.8.4.4 valid=300s; # Google DNS Servers
  resolver_timeout 5s;


  # Redirect to HTTPS
  server {
    listen 80;
    server_name localhost;
    return 301 https://$host$request_uri;

    error_page 500 502 503 504 /50x.html;
    location = /50x.html {
      root /usr/share/nginx/html;
    }

  }

  server {
    #listen 80; # Uncomment to also listen for HTTP requests
    listen 443 ssl http2; # HTTP/2 is only possible when using SSL
    server_name localhost;

    ssl_certificate /etc/nginx/ssl/server.crt;
    ssl_certificate_key /etc/nginx/ssl/server.key;

    root nginx/html;
    location / {
      proxy_pass http://app:5001;
      rewrite ^/app(.*)$ $1 break;
    }

    error_page 500 502 503 504 /50x.html;
    location = /50x.html {
      root /usr/share/nginx/html;
    }

  }


}



